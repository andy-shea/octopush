html,
body {
  overflow-x: hidden;
}

.container {
  width: 100%;
  min-height: 100%;
  padding: 1% 2% 100px;
  position: absolute;
  transition: transform 0.5s cubic-bezier(0.7, 0, 0.3, 1) 0.1s;
}

.container.pushed {
  transition-duration: 0.5s;
  transform: translateX(300px);
}

.login .container {
  height: 100%;
}

.contentStyleSidebar {
  position: relative;
  max-width: 300px;
  min-width: 300px;
}

.contentStyleSidebar ul,
.contentStyleSidebar li {
  padding: 0;
  margin: 0;
  list-style: none;
}

.contentStyleSidebar ul {
  border-top: 1px solid color($dark-red lightness(-10%));
}

.contentStyleSidebar li {
  border-bottom: 1px solid color($dark-red lightness(-10%));
}

.contentStyleSidebar li svg {
  margin: 2% 5% 2% 2vw;
  float: left;
  stroke: color($dark-red lightness(-25%));
}

.contentStyleSidebar li a,
.contentStyleSidebar li a:visited,
.contentStyleSidebar li a:active,
.contentStyleSidebar li a:focus,
.contentStyleSidebar li a:hover {
  padding: 6px 15px;
  display: block;
  line-height: 40px;
  padding-left: 50px;
  color: white;
  text-decoration: none;
  font-size: 1.2em;
}

.contentStyleSidebar li a:active,
.contentStyleSidebar li a:focus,
.contentStyleSidebar li a:hover {
  background: color($dark-red lightness(+3%));
}

.settingsPane {
  border-left: 1px solid color($dark-red lightness(-10%));
  width: 100%;
  height: 100%;
  overflow: hidden;
  display: none;
}

.settingsPane :global(.Select-placeholder) {
  line-height: inherit !important;
}

.settingsPane :global(.Select-value) {
  background-color: #fff !important;
  color: #08c !important;
}

.settingsPane :global(.Select-placeholder) {
  padding: 12px 52px 8px 18px !important;
}

.settingsPane :global(.Select):global(.Select--multi) :global(.Select-control) {
  padding: 6px 15px !important;
  border-radius: 0 !important;
  border: 1px solid color($dark-red lightness(-10%)) !important;
  border-bottom: none !important;
}

.settingsPane :global(.Select-menu-outer) {
  border-radius: 0 !important;
  border-left-color: color($dark-red lightness(-10%)) !important;
  border-right-color: color($dark-red lightness(-10%)) !important;
  border-bottom-color: color($dark-red lightness(-10%)) !important;
}

.settingsPane :global(.Select-control) {
  background-color: color($dark-red lightness(95%)) !important;
}

.settingsOpen .settingsPane {
  display: block;
}

.settingsPaneContent {
  padding: 0 2vw 2em;
}

/* Morph Button: Default Styles */

.morphButton {
  position: relative;
  display: block;
  margin: 0 auto;
}

.morphButton .iconServer {
  border-color: color($dark-red lightness(-20%));
  width: 24px;
  height: 24px;
  float: left;
  margin: 4.5% 7% 4.5% 2.1vw;
}

.morphButton .iconStacks {
  width: 36px;
  margin-left: 1.7vw;
}

.morphButton .iconLogout {
  width: 32px;
  margin-left: 1.9vw;
}

.morphButton > button {
  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);
  position: relative;
  padding: 0 1em;
  border: none;
  background-color: $dark-red;
  color: #f9f6e5;
  text-transform: uppercase;
  letter-spacing: 1px;
  font-weight: 700;
  overflow: hidden;
  text-decoration: none;
  outline: none;
  cursor: pointer;
}
.morphButton > button span { display: none; }
.morphButton.open > button { pointer-events: none; }

.morphContent { pointer-events: none; }

.morphContent h2,
.morphContent h3 {
  color: color($dark-red lightness(-15%));
  font-weight: 300;
}

.morphContent h2 {
  font-size: 2em;
  padding: 0.5em 2vw 0;
  letter-spacing: -1px;
}

.morphContent h3 {
  font-size: 1.5em;
  padding: 0 2vw;
  letter-spacing: -0.5px;
  margin-top: 0;
}

.morphButton.open .morphContent { pointer-events: auto; }

/* Common styles for overlay and modal type (fixed morph) */
.morphButtonFixed,
.morphButtonFixed .morphContent {
  width: 300px;
  height: 80px;
}

.morphButtonFixed > button {
  z-index: 1000;
  width: 100%;
  height: 100%;
  transition: opacity 0.1s 0.5s;
}

.morphButtonFixed.open > button {
  opacity: 0;
  transition: opacity 0.1s;
}

.morphButtonFixed .morphContent {
  position: fixed;
  z-index: 900;
  opacity: 0;
  transition: opacity 0.3s 0.5s, width 0.4s 0.1s, height 0.4s 0.1s, top 0.4s 0.1s, left 0.4s 0.1s, margin 0.4s 0.1s;
}

.morphButtonFixed.open .morphContent { opacity: 1; }

.morphButtonFixed .morphContent > div {
  visibility: hidden;
  height: 0;
  opacity: 0;
  transition: opacity 0.1s, visibility 0s 0.1s, height 0s 0.1s;
  display: flex;
}

.morphButtonFixed.open .morphContent > div {
  visibility: visible;
  height: 100%;
  opacity: 1;
  transition: opacity 0.3s 0.5s;
}

.morphButtonFixed.active > button { z-index: 2000; }

.morphButtonFixed.active .morphContent { z-index: 1900; }

/* Transitions for overlay button and sidebar button */
.morphButtonOverlay .morphContent,
.morphButtonSidebar .morphContent {
  transition: opacity 0.3s 0.5s, width 0.4s 0.1s, height 0.4s 0.1s, top 0.4s 0.1s, left 0.4s 0.1s;
}

.morphButtonOverlay.open .morphContent,
.morphButtonSidebar.open .morphContent {
  transition: width 0.4s 0.1s, height 0.4s 0.1s, top 0.4s 0.1s, left 0.4s 0.1s;
}

/* Morph Button Style: Overlay */
.morphButton.morphButtonOverlay { margin: 50px auto; }

.morphButtonOverlay .morphContent {
  overflow: hidden;
  background: $dark-red;
}

.morphButtonOverlay.open .morphContent {
  top: 0 !important;
  left: 0 !important;
  width: 100%;
  height: 100%;
}

/* Morph Button Style: Modal */
.morphButtonModal::before {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 800;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  content: '';
  opacity: 0;
  transition: opacity 0.5s;
  pointer-events: none;
}

.morphButtonModal.open::before {
  opacity: 1;
  pointer-events: auto;
}

.morphButtonModal.active::before { z-index: 1800; }

.morphButtonModal .morphContent {
  overflow: hidden;
  transition: opacity 0.3s 0.5s, width 0.4s 0.1s, height 0.4s 0.1s, top 0.4s 0.1s, left 0.4s 0.1s, margin 0.4s 0.1s;
}

.morphButtonModal.open .morphContent {
  top: 50% !important;
  left: 50% !important;
  margin: -210px 0 0 -300px;
  width: 600px;
  height: 420px;
  transition: width 0.4s 0.1s, height 0.4s 0.1s, top 0.4s 0.1s, left 0.4s 0.1s, margin 0.4s 0.1s;
}

/* Colors and sizes for individual modals */
.morphButton.morphButtonModal1 { float: left; }

.morphButton.morphButtonModal2,
.morphButton.morphButtonModal3 {
  display: inline-block;
  margin: 10px 15px;
}

.morphButtonModal1 > button,
.morphButtonModal1 .morphContent {
  background-color: #553445;
}

.morphButtonModal2 > button,
.morphButtonModal2 .morphContent,
.morphButtonModal3 > button,
.morphButtonModal3 .morphContent {
  background-color: #fef0e3;
  color: #e75854;
}

.morphButtonModal4 {
  display: inline-block;
}

.morphButtonModal4 > button,
.morphButtonModal4 .morphContent {
  background-color: #faf1e0;
  color: #553445;
}

.morphButtonModal4 > button span,
.morphButtonModal4 .morphClone {
  padding-left: 10px;
  color: #286f81;
}

.morphButtonModal4 .morphClone {
  position: absolute;
  right: 34px;
  bottom: 30px;
  z-index: 100;
  letter-spacing: 1px;
  font-weight: 700;
  transition: bottom 0.4s 0.1s, right 0.4s 0.1s;
}

.morphButtonModal4.open .morphClone {
  right: 10px;
  bottom: 10px;
}

.morphButtonModal1::before {
  background: rgba(240, 221, 204, 0.7);
}

.morphButtonModal2.open .morphContent {
  margin: -210px 0 0 -170px;
  width: 340px;
  height: 420px;
}

.morphButtonModal3.open .morphContent {
  margin: -255px 0 0 -210px;
  width: 420px;
  height: 510px;
}

.morphButtonModal3.open .morphContent > div {
  height: 420px;
}

.morphButtonModal2.open .morphContent > div,
.morphButtonModal3.open .morphContent > div {
  transition: opacity 0.3s 0.3s;
}

.morphButtonModal4.open .morphContent {
  margin: -200px 0 0 -320px;
  width: 640px;
  height: 400px;
}

/* Morph Button Style: In the content flow */
.morphButtonInflow {
  overflow: hidden;
  max-width: 100%;
  height: 70px;
}

.morphButtonInflow > button {
  width: 100%;
  line-height: 70px;
}

.morphButtonInflow .morphContent {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
}

.morphButtonInflow .morphContent .morphClone {
  padding: 0;
  font-weight: 700;
  font-size: 1.5em;
  line-height: 70px;
}

/* Colors and sizes for individual in flow buttons */
.morphButtonInflow1 {
  width: 600px;
  margin: 2em auto;
  transition: height 0.5s cubic-bezier(0.7, 0, 0.3, 1);
}

.morphButtonInflow1 > button span {
  visibility: hidden;
}

.morphButtonInflow1 .morphContent .morphClone {
  color: #f9f6e5;
  background: $dark-red;
}

.morphButtonInflow2 {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 220px;
  background-color: #fef0e3;
  transition: height 0.3s, width 0.3s, transform 0.3s;
  transform: translateX(-50%) translateY(-50%);
}

.morphButtonInflow2 > button {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: transparent;
  color: #e75854;
  transition: transform 0.3s;
}

.morphButtonInflow2.open > button {
  transform: translateX(-100%);
}

.morphButtonInflow2 .morphContent {
  width: 260px;
  height: 200px;
}

.morphButtonInflow2.open {
  width: 260px;
}

/* Morph Button Style: Sidebar */
.morphButtonSidebar,
.morphButtonSidebar .morphContent {
  width: 50px;
  height: 50px;
}

.morphButtonSidebar {
  position: fixed;
  bottom: 50px;
  left: 50px;
}

.morphButtonSidebar > button {
  padding: 0;
}

.morphButtonSidebar .morphContent {
  background: $dark-red;
}

.morphButtonSidebar.open .morphContent {
  top: 0 !important;
  left: 0 !important;
  width: 300px;
  height: 100%;
  overflow: hidden;
  -webkit-backface-visibility: hidden;
}

.morphButtonSidebar.open .morphContent.settingsOpen {
  width: auto;
}

/* Let's add some nice easing for all cases */
.morphButton .morphContent,
.morphButton.open .morphContent,
.morphButtonModal4 .morphClone {
  transition-timing-function: cubic-bezier(0.7, 0, 0.3, 1);
}

/* Helper classes */
.noscroll {
  overflow: hidden;
}

.morphButtonOverlay.scroll .morphContent {
  overflow-y: scroll;
}

.morphButtonSidebar.scroll .morphContent {
  overflow: auto;
}

.noTransition {
  transition: none !important;
}

/* Media Queries */

@media screen and (max-width: 600px) {
  .morphButtonModal.open .morphContent {
    top: 0% !important;
    left: 0% !important;
    margin: 0;
    width: 100%;
    height: 100%;
    overflow-y: scroll;
    transition: width 0.4s 0.1s, height 0.4s 0.1s, top 0.4s 0.1s, left 0.4s 0.1s;
  }
}

@media screen and (max-width: 400px) {
  .morphButtonFixed,
  .morphButtonFixed .morphContent {
    width: 200px;
    height: 80px;
  }

  .morphButtonFixed > button {
    font-size: 75%;
  }

  .morphButtonSidebar > button {
    font-size: 1.6em;
  }

  .morphButtonInflow .morphContent .morphClone {
    font-size: 0.9em;
  }

  .morphButtonModal4,
  .morphButtonModal4 .morphContent {
    width: 220px;
    height: 120px;
  }

  .morphButtonModal4 > button {
    font-size: 100%;
    line-height: 50px;
  }

  .morphButtonModal4 > button span {
    display: block;
  }

  .morphButtonModal4 .morphClone {
    right: 83px;
    bottom: 26px;
  }

  .morphButtonSidebar,
  .morphButtonSidebar .morphContent {
    width: 100% !important;
    height: 60px !important;
  }

  .morphButtonSidebar {
    bottom: 0;
    left: 0;
  }

  .morphButtonSidebar.open .morphContent {
    height: 100% !important;
  }
}
